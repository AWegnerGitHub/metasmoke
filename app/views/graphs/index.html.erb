<h3>Reports by hour</h3>
<br />

<%= line_chart [{name: "All", data: Post.where("created_at >= :date", :date => 1.week.ago).group_by_hour(:created_at).count}, {name: "True positives", data: Post.where("created_at >= :date", :date => 1.week.ago).where(:is_tp => true).group_by_hour(:created_at).count}, {name: "False positives", data: Post.where("created_at >= :date", :date => 1.week.ago).where(:is_fp => true).group_by_hour(:created_at).count}], colors: ["#999", "green", "red"] %>

<h3>Reports by site</h3>
<br />

<% h = HTMLEntities.new %>
<%= pie_chart Post.all.group(:site).count.map{ |k,v| {(k.nil? ? "Unknown" : h.decode(k.site_name))=>v} }.reduce(:merge).select{|k,v| k != "Unknown"}.sort_by {|k,v| v}.reverse %>

<h3>Reports by hour of day</h3>
<br />

<% t = Time.now %>
<% number_of_days = (DateTime.now - Post.minimum(:created_at).to_date).to_i %>

<% all_posts = Post.all.group_by_hour_of_day(:created_at).count.map{ |k,v| [k, v.to_f / 100.0] }.to_h %>
<% tp_posts = Post.where(:is_tp => true).group_by_hour_of_day(:created_at).count.map{ |k,v| [k, v.to_f / 100.0] }.to_h %>
<% fp_posts = Post.where(:is_fp => true).group_by_hour_of_day(:created_at).count.map{ |k,v| [k, v.to_f / 100.0] }.to_h %>

<%= line_chart [{name: "All", data: Post.all.group_by_hour_of_day(:created_at).count.map{ |k,v| [k, v.to_f / 100.0] }.to_h}, {name: "True positives", data: tp_posts}, {name: "False positives", data: fp_posts} ], discrete: true, library: {"xAxis": { "plotLines" => [{"width" => '2', :value => "#{t.hour + t.min.to_f / 60.to_f}", :color => 'grey'}] } }, colors: ["#999", "green", "red"] %>
